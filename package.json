{
  "name": "Liquibase Fluent",
  "displayName": "Liquibase Fluent",
  "publisher": "teralune",
  "version": "0.0.1",
  "icon": "media/liqui-image.jpg",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Liquibase Generator",
      "properties": {
        "liquibaseGenerator.propertiesPath": {
          "type": "string",
          "description": "Path to liquibase.properties file"
        },
        "liquibaseGenerator.defaultChangelogFormat": {
          "type": "string",
          "enum": [
            "xml",
            "yaml",
            "json",
            "sql"
          ],
          "description": "Default format for changelog files"
        },
        "liquibaseGenerator.defaultChangesetFormat": {
          "type": "string",
          "enum": [
            "xml",
            "yaml",
            "json",
            "sql"
          ],
          "description": "Default format for changeset files"
        },
        "liquibaseGenerator.changelogNamingPattern": {
          "type": "string",
          "description": "Pattern for changelog filenames"
        },
        "liquibaseGenerator.changesetNamingPattern": {
          "type": "string",
          "description": "Pattern for changeset filenames"
        },
        "liquibaseGenerator.dateFormatInFilenames": {
          "type": "string",
          "description": "Date format in filenames (using moment.js format)"
        },
        "liquibaseGenerator.projectStructureApproach": {
          "type": "string",
          "enum": [
            "Object-oriented",
            "Release-oriented",
            "Custom"
          ],
          "description": "Project structure approach for organizing changelog and changeset files"
        },
        "liquibaseGenerator.defaultAuthor": {
          "type": "string",
          "description": "Default author for changelogs and changesets"
        },
        "liquibaseGenerator.mainParentChangelog": {
          "type": "string",
          "description": "Path to the main parent changelog file that all new changelogs will be connected to by default"
        },
        "liquibaseGenerator.showRootChangelogWarning": {
          "type": "boolean",
          "default": true,
          "description": "Show warning when no root changelog is configured"
        },
        "liquibaseGenerator.folderChangelogMappings": {
          "type": "object",
          "default": {},
          "description": "Mappings between folder paths and changelogs for automatic changeset connection"
        }
      }
    },
    "commands": [
      {
        "command": "workbench.action.quickOpen",
        "title": "Open Command Palette with Liquibase"
      },
      {
        "command": "liquibaseGenerator.generateSql",
        "title": "Liquibase: Generate SQL for Changeset"
      },
      {
        "command": "liquibaseGenerator.setPropertiesPath",
        "title": "Liquibase: Set Properties File Path"
      },
      {
        "command": "liquibaseGenerator.setupExtension",
        "title": "Liquibase: Run Full Setup Wizard"
      },
      {
        "command": "liquibaseGenerator.createChangelog",
        "title": "Liquibase: Create Changelog"
      },
      {
        "command": "liquibaseGenerator.createChangeset",
        "title": "Liquibase: Create Changeset"
      },
      {
        "command": "liquibaseGenerator.configureFormats",
        "title": "Liquibase: Configure Default Formats"
      },
      {
        "command": "liquibaseGenerator.configureNaming",
        "title": "Liquibase: Configure Naming Patterns"
      },
      {
        "command": "liquibaseGenerator.configureAuthor",
        "title": "Liquibase: Configure Default Author"
      },
      {
        "command": "liquibaseGenerator.configureChangelog",
        "title": "Liquibase: Configure Changelog"
      },
      {
        "command": "liquibaseGenerator.configureStructure",
        "title": "Liquibase: Configure Project Structure"
      },
      {
        "command": "liquibaseGenerator.showSettings",
        "title": "Liquibase: Plugin Settings"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "liquibaseGenerator.setPropertiesPath",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.configureFormats",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.configureNaming",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.configureAuthor",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.configureChangelog",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.configureStructure",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.setupExtension",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.createChangelog",
          "when": "false"
        },
        {
          "command": "liquibaseGenerator.createChangeset",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "command": "liquibaseGenerator.createChangelog",
          "group": "liquibase",
          "when": "explorerResourceIsFolder || resourceLangId"
        },
        {
          "command": "liquibaseGenerator.createChangeset",
          "group": "liquibase",
          "when": "explorerResourceIsFolder || resourceLangId"
        }
      ]
    },
    "languages": [
      {
        "id": "xml",
        "aliases": [
          "XML",
          "xml",
          "Liquibase XML"
        ],
        "extensions": [
          ".xml"
        ]
      },
      {
        "id": "yaml",
        "aliases": [
          "YAML",
          "yaml",
          "Liquibase YAML"
        ],
        "extensions": [
          ".yml",
          ".yaml"
        ]
      },
      {
        "id": "json",
        "aliases": [
          "JSON",
          "json",
          "Liquibase JSON"
        ],
        "extensions": [
          ".json"
        ]
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "test": "vscode-test --extensionDevelopmentPath=. --extensionTestsPath=./test/suite",
    "test:unit": "mocha test/unit/**/*.test.js",
    "coverage": "nyc --exclude-after-remap --exclude=\"test/**\" --exclude=\"src/intellisense/xml/tagsConfigXml.js\" --exclude=\"src/intellisense/yaml/tagsConfigYaml.js\" --exclude=\"src/intellisense/json/tagsConfigJson.js\" --exclude=\"src/intellisense/yaml/liquibaseTagsYaml.js\" --reporter=html --reporter=text mocha test/unit/**/*.test.js",
    "coverage:report": "nyc report --reporter=html"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.96.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.16.0",
    "glob": "^10.3.10",
    "mocha": "^11.5.0",
    "nyc": "^17.1.0",
    "proxyquire": "^2.1.3",
    "sinon": "^20.0.0"
  },
  "dependencies": {
    "fast-xml-parser": "^5.2.3",
    "js-yaml": "^4.1.0",
    "jsonc-parser": "^3.3.1",
    "moment": "^2.30.1",
    "sax": "^1.4.1",
    "sqlite3": "^5.1.7",
    "tmp": "^0.2.3",
    "xml2js": "^0.6.2",
    "yaml": "^2.8.0"
  }
}
